
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-postprocessing/post_processing_exhaust_manifold.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-postprocessing_post_processing_exhaust_manifold.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-postprocessing_post_processing_exhaust_manifold.py:

.. _ref_post_processing_exhaust_manifold:

Postprocessing using PyVista and Matplotlib
---------------------------------------------
This example demonstrates the postprocessing capabilities of PyFluent
(using PyVista and Matplotlib) using a 3D model
of an exhaust manifold with high temperature flows passing through.
The flow through the manifold is turbulent and
involves conjugate heat transfer.

This example demonstrates postprocessing using pyvista

- Create surfaces for the display of 3D data.
- Display filled contours of temperature on several surfaces.
- Display velocity vectors.
- Plot quantitative results using Matplotlib

.. GENERATED FROM PYTHON SOURCE LINES 18-20

.. code-block:: default

    # sphinx_gallery_thumbnail_number = -3








.. GENERATED FROM PYTHON SOURCE LINES 21-30

.. code-block:: default

    import ansys.fluent.core as pyfluent
    from ansys.fluent.core import examples

    from ansys.fluent.visualization import set_config
    from ansys.fluent.visualization.matplotlib import Plots
    from ansys.fluent.visualization.pyvista import Graphics

    set_config(blocking=True, set_view_on_display="isometric")








.. GENERATED FROM PYTHON SOURCE LINES 31-33

First, download the case and data file and start Fluent as a service with
Meshing mode, double precision, number of processors: 2

.. GENERATED FROM PYTHON SOURCE LINES 33-47

.. code-block:: default


    import_case = examples.download_file(
        filename="exhaust_system.cas.h5", directory="pyfluent/exhaust_system"
    )

    import_data = examples.download_file(
        filename="exhaust_system.dat.h5", directory="pyfluent/exhaust_system"
    )

    session = pyfluent.launch_fluent(precision="double", processor_count=2)

    session.solver.tui.file.read_case(case_file_name=import_case)
    session.solver.tui.file.read_data(case_file_name=import_data)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Fast-loading "/ansys_inc/v222/fluent/fluent22.2.0/addons/afd/lib/hdfio.bin"
    Done.

    Reading from a71a33d833f3:"/home/runner/.local/share/ansys_fluent_core/examples/exhaust_system.cas.h5" in NODE0 mode ...
      Reading mesh ...
          288590 cells,     2 cell zones ...
             201658 polyhedra cells,  zone id: 815
              86932 polyhedra cells,  zone id: 818
         1795387 faces,    13 face zones ...
             454038 polygonal interior faces,  zone id: 817
            1258889 polygonal interior faces,  zone id: 814
                275 polygonal pressure-outlet faces,  zone id: 559
                261 polygonal velocity-inlet faces,  zone id: 463
                265 polygonal velocity-inlet faces,  zone id: 367
                262 polygonal velocity-inlet faces,  zone id: 272
              51846 polygonal wall faces,  zone id: 226
              13399 polygonal wall faces,  zone id: 830
              13399 polygonal wall faces,  zone id: 2
                724 polygonal wall faces,  zone id: 181
                676 polygonal wall faces,  zone id: 180
                678 polygonal wall faces,  zone id: 179
                675 polygonal wall faces,  zone id: 178
         1408040 nodes,     1 node zone  ...
    Warning: reading 4 partition grid onto 2 compute node machine.
             Combining every 2 partitions.
      Done.


    Building...
         mesh
            distributing mesh
                    pairs..,
                    parts..,
                    faces..,
                    nodes..,
                    shadow nodes..,
                    cells..,
            bandwidth reduction using Reverse Cuthill-McKee: 80788/4398 = 18.3693
         materials,
         interface,
         domains,
            mixture
         zones,
            solid_up:1:830-shadow
            interior--fluid1
            interior--solid_up
            outlet
            inlet2
            inlet1
            inlet
            solid_up:1
            solid_up:1:830
            out1
            in3
            in2
            in1
            fluid1
            solid_up
         parallel,
    Done.

    Reading from a71a33d833f3:"/home/runner/.local/share/ansys_fluent_core/examples/exhaust_system.dat.h5" in NODE0 mode ...


      Reading results.
    Parallel variables...
    Done.




.. GENERATED FROM PYTHON SOURCE LINES 48-49

Get the graphics object for mesh display

.. GENERATED FROM PYTHON SOURCE LINES 49-52

.. code-block:: default


    graphics = Graphics(session=session)








.. GENERATED FROM PYTHON SOURCE LINES 53-54

Create a graphics object for mesh display

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: default


    mesh1 = graphics.Meshes["mesh-1"]








.. GENERATED FROM PYTHON SOURCE LINES 58-59

Show edges and faces

.. GENERATED FROM PYTHON SOURCE LINES 59-63

.. code-block:: default


    mesh1.show_edges = True
    mesh1.show_faces = True








.. GENERATED FROM PYTHON SOURCE LINES 64-65

Get the surfaces list

.. GENERATED FROM PYTHON SOURCE LINES 65-77

.. code-block:: default


    mesh1.surfaces_list = [
        "in1",
        "in2",
        "in3",
        "out1",
        "solid_up:1",
        "solid_up:1:830",
        "solid_up:1:830-shadow",
    ]
    mesh1.display("window-1")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_001.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 78-79

Disable edges and display again

.. GENERATED FROM PYTHON SOURCE LINES 79-83

.. code-block:: default


    mesh1.show_edges = False
    mesh1.display("window-2")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_002.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 84-85

Create iso-surface on the outlet plane

.. GENERATED FROM PYTHON SOURCE LINES 85-93

.. code-block:: default


    surf_outlet_plane = graphics.Surfaces["outlet-plane"]
    surf_outlet_plane.surface.type = "iso-surface"
    iso_surf1 = surf_outlet_plane.surface.iso_surface
    iso_surf1.field = "y-coordinate"
    iso_surf1.iso_value = -0.125017
    surf_outlet_plane.display("window-3")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_003.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    range [-125.0188, 2.4751942e-09]
    range [-125.0188, 2.4751942e-09]
    Invalid surface.




.. GENERATED FROM PYTHON SOURCE LINES 94-95

Create iso-surface on the mid-plane (Issue # 276)

.. GENERATED FROM PYTHON SOURCE LINES 95-103

.. code-block:: default


    surf_mid_plane_x = graphics.Surfaces["mid-plane-x"]
    surf_mid_plane_x.surface.type = "iso-surface"
    iso_surf2 = surf_mid_plane_x.surface.iso_surface
    iso_surf2.field = "x-coordinate"
    iso_surf2.iso_value = -0.174
    surf_mid_plane_x.display("window-4")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_004.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    range [-362.71505, 13.458935]
    range [-362.71505, 13.458935]
    Invalid surface.




.. GENERATED FROM PYTHON SOURCE LINES 104-105

Temperature contour on the mid-plane and the outlet

.. GENERATED FROM PYTHON SOURCE LINES 105-111

.. code-block:: default


    temperature_contour = graphics.Contours["contour-temperature"]
    temperature_contour.field = "temperature"
    temperature_contour.surfaces_list = ["mid-plane-x", "outlet-plane"]
    temperature_contour.display("window-4")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_005.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    range [-362.71505, 13.458935]
    range [-125.0188, 2.4751942e-09]




.. GENERATED FROM PYTHON SOURCE LINES 112-113

Contour plot of temperature on the manifold

.. GENERATED FROM PYTHON SOURCE LINES 113-126

.. code-block:: default


    temperature_contour_manifold = graphics.Contours["contour-temperature-manifold"]
    temperature_contour_manifold.field = "temperature"
    temperature_contour_manifold.surfaces_list = [
        "in1",
        "in2",
        "in3",
        "out1",
        "solid_up:1",
        "solid_up:1:830",
    ]
    temperature_contour_manifold.display("window-5")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_006.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 127-129

Vector on the mid-plane
Currently using outlet-plane since mid-plane is affected by Issue # 276

.. GENERATED FROM PYTHON SOURCE LINES 129-135

.. code-block:: default


    velocity_vector = graphics.Vectors["velocity-vector"]
    velocity_vector.surfaces_list = ["solid_up:1:830"]
    velocity_vector.scale = 2
    velocity_vector.display("window-6")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_007.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 136-138

Commenting out due to issue #290
Start the Plot Object for the session

.. GENERATED FROM PYTHON SOURCE LINES 138-140

.. code-block:: default

    plots_session_1 = Plots(session)








.. GENERATED FROM PYTHON SOURCE LINES 141-142

Create a default XY-Plot

.. GENERATED FROM PYTHON SOURCE LINES 142-144

.. code-block:: default

    plot_1 = plots_session_1.XYPlots["plot-1"]








.. GENERATED FROM PYTHON SOURCE LINES 145-146

Set the surface on which the plot is plotted and the Y-axis function

.. GENERATED FROM PYTHON SOURCE LINES 146-149

.. code-block:: default

    plot_1.surfaces_list = ["outlet"]
    plot_1.y_axis_function = "temperature"








.. GENERATED FROM PYTHON SOURCE LINES 150-151

Plot the created XY-Plot

.. GENERATED FROM PYTHON SOURCE LINES 151-153

.. code-block:: default

    plot_1.plot("window-7")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_008.png
   :alt: XY Plot
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 154-155

Close Fluent

.. GENERATED FROM PYTHON SOURCE LINES 155-157

.. code-block:: default


    session.exit()




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Shutting down Server...





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  52.812 seconds)


.. _sphx_glr_download_examples_00-postprocessing_post_processing_exhaust_manifold.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: post_processing_exhaust_manifold.py <post_processing_exhaust_manifold.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: post_processing_exhaust_manifold.ipynb <post_processing_exhaust_manifold.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
